# -*- coding: utf-8 -*-
"""airflow_dag.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/109TXjZScfTgxoE-zyzgAlK75NZwyFQ72
"""

from airflow.models import DAG
from airflow.operators.python_operator import PythonOperator
from airflow.utils.dates import days_ago
import gcsfs
from google.cloud import storage
import numpy as np
import pandas as pd
import requests
import json
from google.oauth2 import service_account
from google.cloud import storage


def main():
  source = {
  #add the authentication keys
  }

  credentials = service_account.Credentials.from_service_account_info(source)
  projectid = 'premium-strata-340618'

  client = storage.Client(credentials=credentials, project=projectid)
  bucket = client.get_bucket('cache_loc_images')
  gcs_file_path = "gcs://cache_loc_images/locations.csv"
  gcs = gcsfs.GCSFileSystem(project=projectid, token=source)
  with gcs.open(gcs_file_path,'rb') as f:
    df_loc = pd.read_csv(f)
  for i in range(len(df_loc)):


    loc = df_loc.iloc[i, 0]
    b  = df_loc.iloc[i, 1]
    e = df_loc.iloc[i, 2]
    data ={
    "location": loc,
    "begintime": b,
    "endtime": e
    }
    response = requests.post('https://nowcastservice-dot-premium-strata-340618.uk.r.appspot.com/predict',json=data)
    
    #img_string = predict_weather(loc,b,e)
  #print(img_string.content)
    filename = 'gcs://cache_loc_images/' +str(loc)+".png"
    print(filename)
    credentials = service_account.Credentials.from_service_account_info(source)
    projectid = 'premium-strata-340618'

    with gcs.open(filename,'wb') as f:
      f.write(eval(str(response.content)))

args = {
    'owner': 'Greeshma',
    'start_date': days_ago(1) # make start date in the past
}

with DAG(
    dag_id='loc-dag',
    default_args=args,
    schedule_interval='@hourly' # make this workflow happen every day
) as dag:



    task_2 = PythonOperator(
        task_id='main',
        python_callable=main,
        #op_kwargs={'url': 'https://jsonplaceholder.typicode.com/users'}
    )

    task_2